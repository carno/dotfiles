---
- name: Create home symlinks
  ansible.builtin.file:
    src: "{{ ansible_env.PWD }}/roles/dotfiles/files/{{ item }}"
    path: "{{ ansible_env.HOME }}/{{ item }}"
    state: link
  loop:
    - '.bashrc'
    - '.bash_aliases'
    - '.ctags.d'
    - '.gitconfig'
    - '.gitlint'
    - '.gmrunrc'
    - '.ignore'
    - '.inputrc'
    - '.markdownlintrc'
    - '.mostrc'
    - '.offlineimaprc'
    - '.profile'
    - '.tigrc'
    - '.tmux.conf'
    - '.vimrc'
  tags:
    - dotfiles

- name: Create newsboat's config dir
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.newsboat"
    state: directory
  tags:
    - dotfiles
    - newsboat

- name: Link newsboat's config files
  ansible.builtin.file:
    src: "{{ ansible_env.PWD }}/roles/dotfiles/files/newsboat/{{ item }}"
    path: "{{ ansible_env.HOME }}/.newsboat/{{ item }}"
    state: link
  loop:
    - 'config'
  tags:
    - dotfiles
    - newsboat

- name: Create vim's config dir
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.vim"
    state: directory
  tags:
    - dotfiles
    - vim

- name: Link vim's config files
  ansible.builtin.file:
    src: "{{ ansible_env.PWD }}/roles/dotfiles/files/vim/{{ item }}"
    path: "{{ ansible_env.HOME }}/.vim/{{ item }}"
    state: link
  loop:
    - 'coc-settings.json'
    - 'myUltiSnips'
    - 'spell'
  tags:
    - dotfiles
    - vim

- name: Create ruff's config dir
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.config/ruff"
    state: directory
  tags:
    - dotfiles
    - ruff

- name: Link ruff's config files
  ansible.builtin.file:
    src: "{{ ansible_env.PWD }}/roles/dotfiles/files/ruff.toml"
    path: "{{ ansible_env.HOME }}/.config/ruff/ruff.toml"
    state: link
  tags:
    - dotfiles
    - ruff

- name: Link black's config files
  ansible.builtin.file:
    src: "{{ ansible_env.PWD }}/roles/dotfiles/files/black"
    path: "{{ ansible_env.HOME }}/.config/black"
    state: link
  tags:
    - dotfiles
    - black

- name: Create gpg config dir
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.gnupg"
    state: directory
    mode: '0700'
  tags:
    - dotfiles
    - gpg
    - gpg-agent

- name: Copy gpg-agent config files
  ansible.builtin.copy:
    src: "{{ ansible_env.PWD }}/roles/dotfiles/files/{{ item }}"
    dest: "{{ ansible_env.HOME }}/.gnupg/{{ item }}"
    mode: '0600'
  loop:
    - 'gpg.conf'
    - 'gpg-agent.conf'
  tags:
    - dotfiles
    - gpg
    - gpg-agent

- name: Create tmuxp's config dir
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.config/tmuxp"
    state: directory
  tags:
    - dotfiles
    - tmuxp

- name: Link tmuxp's config files
  ansible.builtin.file:
    src: "{{ ansible_env.PWD }}/roles/dotfiles/files/tmuxp/{{ item }}"
    path: "{{ ansible_env.HOME }}/.config/tmuxp/{{ item }}"
    state: link
  loop:
    - 'dev.yaml'
    - 'home.yaml'
    - 'wide.yaml'
    - 'work.yaml'
  tags:
    - dotfiles
    - tmuxp

- name: Create xfce4 config dir
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.config/xfce4"
    state: directory
  tags:
    - dotfiles
    - xfce4

- name: Link xfce4 config files
  ansible.builtin.file:
    src: "{{ ansible_env.PWD }}/roles/dotfiles/files/xfce4/{{ item }}"
    path: "{{ ansible_env.HOME }}/.config/xfce4/{{ item }}"
    state: link
  loop:
    - "xinitrc"
  tags:
    - dotfiles
    - xfce4

- name: Create ghostty config dir
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.config/ghostty"
    state: directory
  tags:
    - dotfiles
    - ghostty

- name: Link ghostty config files
  ansible.builtin.file:
    src: "{{ ansible_env.PWD }}/roles/dotfiles/files/ghostty/{{ item }}"
    path: "{{ ansible_env.HOME }}/.config/ghostty/{{ item }}"
    state: link
  loop:
    - "config"
  tags:
    - dotfiles
    - ghostty
