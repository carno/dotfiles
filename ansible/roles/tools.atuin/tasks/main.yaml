---
- name: Check latest atuin version
  ansible.builtin.uri:
    url: https://api.github.com/repos/atuinsh/atuin/releases/latest
    return_content: true
    user: "{{ github_user }}"
    password: "{{ github_token }}"
    force_basic_auth: true
  register: atuin_github_details
  when: atuin.version is undefined
  tags:
    - tools
    - atuin

- name: Set atuin.version
  ansible.builtin.set_fact:
    atuin:
      version: "{{ atuin_github_details.json.tag_name }}"
  when: not atuin_github_details is skipped
  tags:
    - tools
    - atuin

- name: Install atuin
  ansible.builtin.unarchive:
    src: "https://github.com/atuinsh/atuin/releases/download/{{ atuin.version }}/atuin-x86_64-unknown-linux-gnu.tar.gz"
    dest: /usr/local/bin
    remote_src: true
    extra_opts:
      - '--strip-components=1'
    include:
      - 'atuin-x86_64-unknown-linux-gnu/atuin'
  become: true
  become_method: su
  become_flags: '-'
  register: atuin_install
  tags:
    - tools
    - atuin

- name: Generate completions
  ansible.builtin.shell: /usr/local/bin/atuin gen-completions --shell bash > /usr/share/bash-completion/completions/atuin
  become: true
  become_method: su
  become_flags: '-'
  when: atuin_install is changed
  tags:
    - tools
    - atuin

- name: Install bash-preexec
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/rcaloras/bash-preexec/master/bash-preexec.sh
    dest: /usr/local/src/bash-preexec.sh
  become: true
  become_method: su
  become_flags: '-'
  tags:
    - tools
    - atuin

- name: Create atuin's` config dir
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.config/atuin"
    state: directory
  tags:
    - dotfiles
    - tools
    - atuin

- name: Link atuin's config
  ansible.builtin.file:
    src: "{{ ansible_env.PWD }}/roles/tools.atuin/files/config.toml"
    path: "{{ ansible_env.HOME }}/.config/atuin/config.toml"
    state: link
  tags:
    - dotfiles
    - tools
    - atuin
