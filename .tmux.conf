# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a
bind-key C-a last-window

# Additional bindings
unbind % # Remove default binding since weâ€™re replacing
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# select panes vim style
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# use arrows to resize panes
bind -r C-h resize-pane -L
bind -r C-j resize-pane -D
bind -r C-k resize-pane -U
bind -r C-l resize-pane -R

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Set status bar
set -g status-justify centre
set -g status-interval 2
set -g status-style fg=white,bg=default,dim

set -g status-left-length 30
set -g status-left "#[fg=green][ #h #S ]["
set -g status-right "#[fg=green]][ #(cut -d ' ' -f 1-3 /proc/loadavg) ][ %d/%m %H:%M ]"

# default window title colors
set-window-option -g window-status-style fg=cyan,bg=default,dim

# active window title colors
set-window-option -g window-status-current-style fg=white,bg=default,bright

# command/message line colors
set -g message-style fg=white,bg=black,bright

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside 
# another TMUX session
bind-key a send-prefix

# Activity monitoring
#setw -g monitor-activity on
#set -g visual-activity on

# xterm-style function key sequence
setw -g xterm-keys on

# Highlight active window
# set-window-option -g window-status-current-bg red

# terminal colors
set -g default-terminal "xterm-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"

# auto renumber windows
set -g renumber-windows on

# turn on mouse support
set -g mouse on

# move status bar to top
set -g status-position top

# enable focus events, so vim's focus work
set -g focus-events on

# increase scrollback
set -g history-limit 5000

# vi copy mode
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# Do not copy selection and cancel copy mode on drag end event
# Prefer iTerm style selection: select, then mouse click to copy to buffer
unbind -T copy-mode-vi MouseDragEnd1Pane
bind -T copy-mode-vi MouseDown1Pane select-pane \;\
  send-keys -X copy-pipe "xclip -selection clipboard" \;\
  send-keys -X clear-selection
